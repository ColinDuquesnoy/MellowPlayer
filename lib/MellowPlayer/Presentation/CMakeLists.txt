set(LIB_NAME "${PROJECT_NAME}.Presentation")

set(EXCLUDE_DIRS "Linux")
glob_recurse_excl(HEADER_FILES *.hpp "${EXCLUDE_DIRS}")
message(STATUS "Linux header files ${LINUX_HEADER_FILES}")
glob_recurse_excl(SOURCE_FILES *.cpp "${EXCLUDE_DIRS}")

file(GLOB_RECURSE QML_FILES Views/*.qml)
file(GLOB_RECURSE QRC_FILES *.qrc)
file(GLOB_RECURSE CONF_FILES *.conf)

set(QML_IMPORT_PATH ${CMAKE_SOURCE_DIR}/Views ${CMAKE_SOURCE_DIR}/Views/MellowPlayer CACHE string "" FORCE)

set(QML_FILES ${QML_FILES} Views/MellowPlayer/qmldir)
if(UNIX AND NOT APPLE)
    glob_recurse_excl(MPRIS_HEADER_FILES Mpris/Linux/*.hpp "")
    glob_recurse_excl(MPRIS_SOURCE_FILES Mpris/Linux/*.cpp "")
    set(SOURCE_FILES ${SOURCE_FILES} ${MPRIS_SOURCE_FILES})
    set(HEADER_FILES ${HEADER_FILES} ${MPRIS_HEADER_FILES})
    if(USE_LIBNOTIFY)
        include_directories(SYSTEM ${LIBNOTIFY_INCLUDE_DIRS})
        glob_recurse_excl(LIBNOTIFY_PRESENTER_HEADER_FILES Notifications/Presenters/Linux/*.hpp "")
        glob_recurse_excl(LIBNOTIFY_PRESENTER_SOURCE_FILES Notifications/Presenters/Linux/*.cpp "")
        set(SOURCE_FILES ${SOURCE_FILES} ${LIBNOTIFY_PRESENTER_SOURCE_FILES})
        set(HEADER_FILES ${HEADER_FILES} ${LIBNOTIFY_PRESENTER_HEADER_FILES})
    endif()
endif()

SET(CMAKE_DEBUG_POSTFIX "")
add_library(${LIB_NAME} STATIC ${SOURCE_FILES} ${HEADER_FILES} ${QRC_FILES} ${QML_FILES} ${CONF_FILES})
target_link_libraries(${LIB_NAME} ${PROJECT_NAME}.Domain
                      Qt5::Core Qt5::Qml Qt5::Quick Qt5::QuickControls2 Qt5::Svg
                      Qt5::WebEngine Qt5::WebEngineWidgets Qt5::Widgets qxtglobalshortcut)
if(UNIX AND NOT APPLE)
    target_link_libraries(${LIB_NAME} Qt5::DBus)
    if(USE_LIBNOTIFY)
        target_link_libraries(${LIB_NAME} ${LIBNOTIFY_LIBRARIES})
    endif()
endif()
if (USE_PRECOMPILED_HEADER)
    set_target_properties(${LIB_NAME} PROPERTIES COTIRE_CXX_PREFIX_HEADER_INIT "stdafx.hpp")
    set_target_properties(${LIB_NAME} PROPERTIES COTIRE_ADD_UNITY_BUILD FALSE)
    cotire(${LIB_NAME})
endif()
